name: Initialize Terraform backend

on:
  workflow_call:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        type: string

jobs:
  TF-Init:
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    env:
      WORKSPACE_NAME: ${{ inputs.environment }}
      TF_BACKEND_SA: ${{ vars.TF_BACKEND_SA }}
      TF_BACKEND_CONTAINER: ${{ vars.TF_BACKEND_CONTAINER }}
      TF_BACKEND_RESOURCE_GROUP: ${{ vars.TF_BACKEND_RG }}
      TF_BACKEND_SUBSCRIPTION_ID: ${{ secrets.TF_BACKEND_SUBSCRIPTION_ID }}
      TF_BACKEND_CONFIG_KEY: ${{ vars.TF_BACKEND_KEY }}
      ARM_CLIENT_ID: ${{ secrets.AZURE_SP_CLIENT_ID }}
      ARM_CLIENT_SECRET: ${{ secrets.AZURE_SP_CLIENT_SECRET }}
      ARM_SUBSCRIPTION_ID: ${{ secrets.AZURE_SP_SUBSCRIPTION_ID }}
      ARM_TENANT_ID: ${{ secrets.AZURE_SP_TENANT_ID }}
      TF_VAR_LOCATION: ${{ vars.PROJECT_LOCATION }}
      TF_VAR_RESOURCE_GROUP_NAME: ${{ vars.PROJECT_RESOURCE_GROUP }}
      TF_VAR_SUBSCRIPTION_ID: ${{ vars.PROJECT_SUBSCRIPTION_ID }}
      TF_VAR_SERVICE_NAME: ${{ vars.PROJECT_SERVICE_NAME }}
      
    defaults:
        run:
          working-directory: ./terraform

    steps:
      - uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.7
          
      - name: Initialize Terraform
        id: init
        run: terraform init -backend-config=storage_account_name="$TF_BACKEND_SA" -backend-config=container_name="$TF_BACKEND_CONTAINER" -backend-config=key="$TF_BACKEND_CONFIG_KEY" -backend-config=resource_group_name="$TF_BACKEND_RESOURCE_GROUP"

      - name: Select workspace
        id: workspace
        run: terraform workspace select $WORKSPACE_NAME || terraform workspace new $WORKSPACE_NAME

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color